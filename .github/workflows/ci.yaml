name: CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # --- Step 0: Run unit tests ---
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run unit tests
      run: python -m unittest discover -s helloapp -p "*.py"

    # --- Step 1: Build & Push Docker image to DigitalOcean Registry ---
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DigitalOcean Container Registry
      run: echo "${{ secrets.DOCR_TOKEN }}" | docker login -u "_" --password-stdin registry.digitalocean.com

    - name: Build and Push multi-arch image
      run: |
        IMAGE=registry.digitalocean.com/${{ secrets.DOCR_REGISTRY }}/formlabs
        TAG=$(echo $GITHUB_SHA | cut -c1-7)
        echo "IMAGE=$IMAGE" >> $GITHUB_ENV
        echo "TAG=$TAG" >> $GITHUB_ENV

        docker buildx build \
          --platform linux/amd64 \
          -t $IMAGE:$TAG \
          -t $IMAGE:latest \
          --push .

    # --- Step 2: Deploy to DigitalOcean Kubernetes ---
    - name: Set up kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: v1.29.0

    - name: Configure kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG_CONTENTS }}" > $HOME/.kube/config

    - name: Deploy with Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.14.0

    - name: Upgrade Helm release
      run: |
        IMAGE=registry.digitalocean.com/${{ secrets.DOCR_REGISTRY }}/formlabs
        helm upgrade --install helloapp-chart ./helloapp-chart \
          --set image.repository=$IMAGE \
          --set image.tag=${TAG}
